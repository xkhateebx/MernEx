{"version":3,"sources":["components/AllPirates.js","components/CreatePirate.js","components/ShowPirate.js","components/EditPirate.js","App.js","serviceWorker.js","index.js"],"names":["useState","pirates","setPirates","useEffect","axios","get","then","response","data","catch","err","console","log","onClick","navigate","map","pirate","index","key","name","_id","id","delete","filter","setName","image_url","setImageURL","num_of_treasures","setNumOfTreasures","catch_phrase","setCatchPhrase","crew_position","setCrewPosition","peg_leg","setPegLeg","eye_patch","setEyePatch","hook_hand","setHookHand","errors","setErrors","i","style","color","onSubmit","e","preventDefault","post","errs","innerErrors","push","message","type","value","onChange","target","checked","props","setPirate","res","height","width","src","alt","put","App","className","AllPirates","path","CreatePirate","ShowPirate","EditPirate","from","to","noThrow","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"uQAIe,aAAO,IAAD,EACaA,mBAAS,MADtB,mBACVC,EADU,KACDC,EADC,KAGjBC,qBAAU,WACNC,IAAMC,IAAI,qCACLC,MAAK,SAAAC,GAAQ,OAAEL,EAAWK,EAASC,SACnCC,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,QAC/B,IAQH,OAAgB,OAAZT,EAAyB,aAGzB,oCACI,2CACA,4BAAQY,QAAS,kBAAMC,YAAS,iBAAhC,cACCb,EAAQc,KAAI,SAACC,EAAQC,GACd,OACI,yBAAKC,IAAKD,GACN,2BAAID,EAAOG,KAAX,IACA,4BAAQN,QAAS,kBAAIC,YAAS,WAAaE,EAAOI,OAAlD,eADA,UAEA,4BAAQP,QAAS,kBAjBlBQ,EAiBoCL,EAAOI,SAhB9DhB,IAAMkB,OAAO,oCAAsCD,GAClDf,MAAK,kBAAMJ,EAAWD,EAAQsB,QAAO,SAAAP,GAAM,OAAIA,EAAOI,MAAQC,SAC9DZ,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,MAHR,IAACW,IAiBC,UAFA,UAGA,4BAAQR,QAAS,kBAAIC,YAAS,WAAaE,EAAOI,IAAM,WAAxD,eC3Bb,aAAO,IAAD,EACOpB,mBAAS,IADhB,mBACVmB,EADU,KACJK,EADI,OAEgBxB,mBAAS,IAFzB,mBAEVyB,EAFU,KAECC,EAFD,OAG6B1B,mBAAS,IAHtC,mBAGV2B,EAHU,KAGQC,EAHR,OAIsB5B,mBAAS,IAJ/B,mBAIV6B,EAJU,KAIIC,EAJJ,OAKwB9B,mBAAS,IALjC,mBAKV+B,EALU,KAKKC,EALL,OAMYhC,oBAAS,GANrB,mBAMViC,EANU,KAMDC,EANC,OAOgBlC,oBAAS,GAPzB,mBAOVmC,EAPU,KAOCC,EAPD,OAQgBpC,oBAAS,GARzB,mBAQVqC,EARU,KAQCC,EARD,OAUWtC,mBAAS,IAVpB,mBAUVuC,EAVU,KAUFC,EAVE,KAqCjB,OACI,oCACA,0CACA,4BAAQ3B,QAAS,kBAAMC,YAAS,cAAhC,cACCyB,EAAOxB,KAAI,SAACL,EAAK+B,GAAN,OACR,uBAAGvB,IAAKuB,EAAGC,MAAO,CAACC,MAAO,QAASjC,MAEvC,0BAAMkC,SAhCc,SAAAC,GACpBA,EAAEC,iBACFN,EAAU,IACVpC,IAAM2C,KAAK,mCAAoC,CAC3C5B,OACAM,YACAE,mBACAE,eACAE,gBACAE,UACAE,YACAE,cAEC/B,MAAK,kBAAMQ,YAAS,eACpBL,OAAM,SAAAC,GACH,IAAMsC,EAAO,GACPC,EAAcvC,EAAIH,SAASC,KAAK+B,OAEtC,IAAK,IAAMrB,KAAO+B,EACdD,EAAKE,KAAKD,EAAY/B,GAAKiC,SAE/BX,EAAUQ,QAYd,2BACI,gDAA4B,6BAC5B,2BAAOI,KAAK,OAAOC,MAAOlC,EAAMmC,SAAY,SAACT,GAAD,OAAKrB,EAAQqB,EAAEU,OAAOF,WAEtE,2BACI,8CAA0B,6BAC1B,2BAAOD,KAAK,OAAOC,MAAO5B,EAAW6B,SAAY,SAACT,GAAD,OAAKnB,EAAYmB,EAAEU,OAAOF,WAE/E,2BACI,yDAAqC,6BACrC,2BAAOD,KAAK,OAAOC,MAAO1B,EAAkB2B,SAAY,SAACT,GAAD,OAAKjB,EAAkBiB,EAAEU,OAAOF,WAE5F,2BACI,wDAAoC,6BACpC,2BAAOD,KAAK,OAAOC,MAAOxB,EAAcyB,SAAY,SAACT,GAAD,OAAKf,EAAee,EAAEU,OAAOF,WAErF,2BACI,kDAA8B,6BAC9B,4BAAQC,SAAY,SAACT,GAAD,OAAKb,EAAgBa,EAAEU,OAAOF,QAAQlC,KAAK,gBAAgBkC,MAAOtB,GAClF,4BAAQsB,MAAM,IAAd,wBACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,kBAAd,kBACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,iBAAd,kBACK,8BAEb,2BACI,4CAAwB,6BACxB,2BAAOD,KAAK,WAAWC,MAAOpB,EAASqB,SAAY,kBAAIpB,GAAWD,IAAUuB,QAASvB,KAEzF,2BACI,8CAA0B,6BAC1B,2BAAOmB,KAAK,WAAWC,MAAOlB,EAAWmB,SAAY,kBAAIlB,GAAaD,IAAYqB,QAASrB,KAE/F,2BACI,8CAA0B,6BAC1B,2BAAOiB,KAAK,WAAWC,MAAOhB,EAAWiB,SAAY,kBAAIhB,GAAaD,IAAYmB,QAASnB,KAE/F,iDCpFG,WAAAoB,GAAU,IAAD,EACQzD,mBAAS,IADjB,mBACbgB,EADa,KACL0C,EADK,KAQpB,OALAvD,qBAAU,WACNC,IAAMC,IAAI,oCAAsCoD,EAAMpC,IACjDf,MAAK,SAAAqD,GAAG,OAAID,EAAUC,EAAInD,WAChC,CAACiD,EAAMpC,KAGN,6BACI,4BAAQR,QAAS,kBAAMC,YAAS,cAAhC,cACA,4BAAKE,EAAOG,MACZ,qCACA,4CAAkBH,EAAOa,cACzB,6CAAmBb,EAAOe,eAC1B,yCAAef,EAAOW,kBACtB,uCAAaX,EAAOiB,QAAU,MAAQ,MACtC,yCAAejB,EAAOmB,UAAY,MAAQ,MAC1C,yCAAenB,EAAOqB,UAAY,MAAQ,MAC1C,yBAAKK,MAAO,CAACkB,OAAQ,QAASC,MAAO,SAAUC,IAAK9C,EAAOS,UAAWsC,IAAK/C,EAAOG,OAAO,6BACzF,4BAAQN,QAAS,kBAAIC,YAAS,WAAaE,EAAOI,IAAM,WAAxD,QAXJ,MCTO,WAAAqC,GAAU,IAAD,EACIzD,mBAAS,IADb,mBACbmB,EADa,KACPK,EADO,OAEaxB,mBAAS,IAFtB,mBAEbyB,EAFa,KAEFC,EAFE,OAG0B1B,mBAAS,IAHnC,mBAGb2B,EAHa,KAGKC,EAHL,OAImB5B,mBAAS,IAJ5B,mBAIb6B,EAJa,KAICC,EAJD,OAKqB9B,mBAAS,IAL9B,mBAKb+B,EALa,KAKEC,EALF,OAMShC,mBAAS,IANlB,mBAMbiC,EANa,KAMJC,EANI,OAOalC,mBAAS,IAPtB,mBAObmC,EAPa,KAOFC,EAPE,OAQapC,mBAAS,IARtB,mBAQbqC,EARa,KAQFC,EARE,OAUQtC,mBAAS,IAVjB,mBAUbuC,EAVa,KAULC,EAVK,KAYpBrC,qBAAU,WACNC,IAAMC,IAAI,oCAAsCoD,EAAMpC,IACjDf,MAAK,SAAAqD,GACFnC,EAAQmC,EAAInD,KAAKW,MACjBO,EAAYiC,EAAInD,KAAKiB,WACrBG,EAAkB+B,EAAInD,KAAKmB,kBAC3BG,EAAe6B,EAAInD,KAAKqB,cACxBG,EAAgB2B,EAAInD,KAAKuB,eACzBG,EAAUyB,EAAInD,KAAKyB,SACnBG,EAAYuB,EAAInD,KAAK2B,WACrBG,EAAYqB,EAAInD,KAAK6B,gBAE9B,CAACoB,EAAMpC,KA2BV,OACE,oCACE,2CACA,4BAAQR,QAAS,kBAAMC,YAAS,cAAhC,cACCyB,EAAOxB,KAAI,SAACL,EAAK+B,GAAN,OACR,uBAAGvB,IAAKuB,EAAGC,MAAO,CAACC,MAAO,QAASjC,MAEvC,0BAAMkC,SAhCc,SAAAC,GACpBA,EAAEC,iBACFN,EAAU,IACVpC,IAAM4D,IAAI,oCAAsCP,EAAMpC,GAAI,CACtDF,OACAM,YACAE,mBACAE,eACAE,gBACAE,UACAE,YACAE,cAEC/B,MAAK,kBAAMQ,YAAS,eACpBL,OAAM,SAAAC,GACH,IAAMsC,EAAO,GACPC,EAAcvC,EAAIH,SAASC,KAAK+B,OAEtC,IAAK,IAAMrB,KAAO+B,EACdD,EAAKE,KAAKD,EAAY/B,GAAKiC,SAE/BX,EAAUQ,QAYd,2BACI,gDAA4B,6BAC5B,2BAAOI,KAAK,OAAOC,MAAOlC,EAAMmC,SAAY,SAACT,GAAD,OAAKrB,EAAQqB,EAAEU,OAAOF,WAEtE,2BACI,8CAA0B,6BAC1B,2BAAOD,KAAK,OAAOC,MAAO5B,EAAW6B,SAAY,SAACT,GAAD,OAAKnB,EAAYmB,EAAEU,OAAOF,WAE/E,2BACI,yDAAqC,6BACrC,2BAAOD,KAAK,OAAOC,MAAO1B,EAAkB2B,SAAY,SAACT,GAAD,OAAKjB,EAAkBiB,EAAEU,OAAOF,WAE5F,2BACI,wDAAoC,6BACpC,2BAAOD,KAAK,OAAOC,MAAOxB,EAAcyB,SAAY,SAACT,GAAD,OAAKf,EAAee,EAAEU,OAAOF,WAErF,2BACI,kDAA8B,6BAC9B,4BAAQC,SAAY,SAACT,GAAD,OAAKb,EAAgBa,EAAEU,OAAOF,QAAQlC,KAAK,gBAAgBkC,MAAOtB,GAClF,4BAAQsB,MAAM,IAAd,wBACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,kBAAd,kBACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,iBAAd,kBACK,8BAEb,2BACI,4CAAwB,6BACxB,2BAAOD,KAAK,WAAWC,MAAOpB,EAASqB,SAAY,kBAAIpB,GAAWD,IAAUuB,QAASvB,KAEzF,2BACI,8CAA0B,6BAC1B,2BAAOmB,KAAK,WAAWC,MAAOlB,EAAWmB,SAAY,kBAAIlB,GAAaD,IAAYqB,QAASrB,KAE/F,2BACI,8CAA0B,6BAC1B,2BAAOiB,KAAK,WAAWC,MAAOhB,EAAWiB,SAAY,kBAAIhB,GAAaD,IAAYmB,QAASnB,KAE/F,6CC/EG4B,MAdf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,IAAD,KACE,kBAACC,EAAD,CAAYC,KAAK,aACjB,kBAACC,EAAD,CAAcD,KAAK,gBACnB,kBAACE,EAAD,CAAYF,KAAK,gBACjB,kBAACG,EAAD,CAAYH,KAAK,sBAEnB,kBAAC,IAAD,CAAUI,KAAK,IAAIC,GAAG,WAAWC,SAAO,MCN1BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjF,MAAK,SAAAkF,GACJA,EAAaC,gBAEdhF,OAAM,SAAAiF,GACL/E,QAAQ+E,MAAMA,EAAMvC,c","file":"static/js/main.b6f104a0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nexport default () => {\r\n    const [pirates, setPirates] = useState(null); \r\n\r\n    useEffect(()=>{\r\n        axios.get('http://localhost:8000/api/pirates')\r\n            .then(response=>setPirates(response.data))\r\n            .catch((err)=>console.log(err))\r\n    }, [])\r\n\r\n    const deleteHandler = (id) => {\r\n        axios.delete('http://localhost:8000/api/pirate/' + id)\r\n        .then(() => setPirates(pirates.filter(pirate => pirate._id !== id)))\r\n        .catch((err)=>console.log(err))  \r\n    }\r\n\r\n    if (pirates === null) return \"Loading...\";\r\n\r\n    return (\r\n        <>\r\n            <h1>Pirate Crew</h1>\r\n            <button onClick={() => navigate(\"/pirate/new\")}>Add Pirate</button>\r\n            {pirates.map((pirate, index)=>{\r\n                    return (\r\n                        <div key={index}>\r\n                            <p>{pirate.name} { }\r\n                            <button onClick={()=>navigate(\"/pirate/\" + pirate._id)}>View Pirate</button> { } | { }\r\n                            <button onClick={()=>deleteHandler(pirate._id)}>Delete</button> { } | { }\r\n                            <button onClick={()=>navigate(\"/pirate/\" + pirate._id + \"/edit\")}>Edit</button>\r\n                            </p>\r\n                        </div>\r\n                    )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\n\r\nexport default () => {\r\n    const [name, setName] = useState(\"\"); \r\n    const [image_url, setImageURL] = useState(\"\");\r\n    const [num_of_treasures, setNumOfTreasures] = useState(\"\");\r\n    const [catch_phrase, setCatchPhrase] = useState(\"\");\r\n    const [crew_position, setCrewPosition] = useState(\"\");\r\n    const [peg_leg, setPegLeg] = useState(true);\r\n    const [eye_patch, setEyePatch] = useState(true);\r\n    const [hook_hand, setHookHand] = useState(true);\r\n\r\n    const [errors, setErrors] = useState([]);\r\n  \r\n    const onSubmitHandler = e => {\r\n        e.preventDefault();\r\n        setErrors([]);\r\n        axios.post('http://localhost:8000/api/pirate', {\r\n            name,\r\n            image_url,\r\n            num_of_treasures,\r\n            catch_phrase,\r\n            crew_position,\r\n            peg_leg,\r\n            eye_patch,\r\n            hook_hand\r\n        })\r\n            .then(() => navigate(\"/pirates\"))\r\n            .catch(err => {\r\n                const errs = [];\r\n                const innerErrors = err.response.data.errors;\r\n\r\n                for (const key in innerErrors){\r\n                    errs.push(innerErrors[key].message);\r\n                }\r\n                setErrors(errs);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Add Pirate</h1>\r\n        <button onClick={() => navigate(\"/pirates\")}>Crew Board</button>\r\n        {errors.map((err, i) => (\r\n            <p key={i} style={{color: \"red\"}}>{err}</p>\r\n        ))}\r\n        <form onSubmit={onSubmitHandler}>\r\n            <p>\r\n                <label>Pirate Name: </label><br/>\r\n                <input type=\"text\" value={name} onChange = {(e)=>setName(e.target.value)} />\r\n            </p>\r\n            <p>\r\n                <label>Image URL: </label><br/>\r\n                <input type=\"text\" value={image_url} onChange = {(e)=>setImageURL(e.target.value)}/>\r\n            </p>\r\n            <p>\r\n                <label># of Treasure Chests: </label><br/>\r\n                <input type=\"text\" value={num_of_treasures} onChange = {(e)=>setNumOfTreasures(e.target.value)}/>\r\n            </p>\r\n            <p>\r\n                <label>Pirate Catch Phrase: </label><br/>\r\n                <input type=\"text\" value={catch_phrase} onChange = {(e)=>setCatchPhrase(e.target.value)}/>\r\n            </p>\r\n            <p>\r\n                <label>Crew Position: </label><br/>\r\n                <select onChange = {(e)=>setCrewPosition(e.target.value)} name=\"crew_position\" value={crew_position}>\r\n                    <option value=\"\">Select Crew Position</option>\r\n                    <option value=\"Captain\">Captain</option>\r\n                    <option value=\"First Mate\">First Mate</option>\r\n                    <option value=\"Quarter Master\">Quarter Master</option>\r\n                    <option value=\"Boatswain\">Boatswain</option>\r\n                    <option value=\"Powder Monkey\">Powder Monkey</option>\r\n                </select><br></br>\r\n            </p>\r\n            <p>\r\n                <label>Peg Leg: </label><br/>\r\n                <input type=\"checkbox\" value={peg_leg} onChange = {()=>setPegLeg(!peg_leg)} checked={peg_leg}/>\r\n            </p>\r\n            <p>\r\n                <label>Eye Patch: </label><br/>\r\n                <input type=\"checkbox\" value={eye_patch} onChange = {()=>setEyePatch(!eye_patch)} checked={eye_patch}/>\r\n            </p>\r\n            <p>\r\n                <label>Hook Hand: </label><br/>\r\n                <input type=\"checkbox\" value={hook_hand} onChange = {()=>setHookHand(!hook_hand)} checked={hook_hand}/>\r\n            </p>\r\n            <button>Add Pirate</button>\r\n        </form>\r\n    </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\n\r\nexport default props => {\r\n    const [pirate, setPirate] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/pirate/\" + props.id)\r\n            .then(res => setPirate(res.data))\r\n    }, [props.id])\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => navigate(\"/pirates\")}>Crew Board</button>\r\n            <h1>{pirate.name}</h1>\r\n            <h2>About</h2>\r\n            <p>Catch Phrase: {pirate.catch_phrase}</p>\r\n            <p>Crew Position: {pirate.crew_position}</p>\r\n            <p>Treasures: {pirate.num_of_treasures}</p>\r\n            <p>Peg leg: {pirate.peg_leg ? \"Yes\" : \"No\"}</p>\r\n            <p>Eye Patch: {pirate.eye_patch ? \"Yes\" : \"No\"}</p>\r\n            <p>Hook Hand: {pirate.hook_hand ? \"Yes\" : \"No\"}</p>\r\n            <img style={{height: \"250px\", width: \"250px\"}} src={pirate.image_url} alt={pirate.name}/><br/>\r\n            <button onClick={()=>navigate(\"/pirate/\" + pirate._id + \"/edit\")}>Edit</button> {}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\n\r\nexport default props => {\r\n    const [name, setName] = useState(\"\"); \r\n    const [image_url, setImageURL] = useState(\"\");\r\n    const [num_of_treasures, setNumOfTreasures] = useState(\"\");\r\n    const [catch_phrase, setCatchPhrase] = useState(\"\");\r\n    const [crew_position, setCrewPosition] = useState(\"\");\r\n    const [peg_leg, setPegLeg] = useState(\"\");\r\n    const [eye_patch, setEyePatch] = useState(\"\");\r\n    const [hook_hand, setHookHand] = useState(\"\");\r\n\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/pirate/\" + props.id)\r\n            .then(res =>{ \r\n                setName(res.data.name); \r\n                setImageURL(res.data.image_url); \r\n                setNumOfTreasures(res.data.num_of_treasures);\r\n                setCatchPhrase(res.data.catch_phrase);\r\n                setCrewPosition(res.data.crew_position);\r\n                setPegLeg(res.data.peg_leg);\r\n                setEyePatch(res.data.eye_patch);\r\n                setHookHand(res.data.hook_hand)\r\n            })\r\n    }, [props.id])\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault();\r\n        setErrors([]);\r\n        axios.put('http://localhost:8000/api/pirate/' + props.id, {\r\n            name,\r\n            image_url,\r\n            num_of_treasures,\r\n            catch_phrase,\r\n            crew_position,\r\n            peg_leg,\r\n            eye_patch,\r\n            hook_hand\r\n        })\r\n            .then(() => navigate(\"/pirates\"))\r\n            .catch(err => {\r\n                const errs = [];\r\n                const innerErrors = err.response.data.errors;\r\n\r\n                for (const key in innerErrors){\r\n                    errs.push(innerErrors[key].message);\r\n                }\r\n                setErrors(errs);\r\n            })\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <h1>Edit Pirate</h1>\r\n        <button onClick={() => navigate(\"/pirates\")}>Crew Board</button>\r\n        {errors.map((err, i) => (\r\n            <p key={i} style={{color: \"red\"}}>{err}</p>\r\n        ))}\r\n        <form onSubmit={onSubmitHandler}>\r\n            <p>\r\n                <label>Pirate Name: </label><br/>\r\n                <input type=\"text\" value={name} onChange = {(e)=>setName(e.target.value)} />\r\n            </p>\r\n            <p>\r\n                <label>Image URL: </label><br/>\r\n                <input type=\"text\" value={image_url} onChange = {(e)=>setImageURL(e.target.value)} />\r\n            </p>\r\n            <p>\r\n                <label># of Treasure Chests: </label><br/>\r\n                <input type=\"text\" value={num_of_treasures} onChange = {(e)=>setNumOfTreasures(e.target.value)}/>\r\n            </p>\r\n            <p>\r\n                <label>Pirate Catch Phrase: </label><br/>\r\n                <input type=\"text\" value={catch_phrase} onChange = {(e)=>setCatchPhrase(e.target.value)}/>\r\n            </p>\r\n            <p>\r\n                <label>Crew Position: </label><br/>\r\n                <select onChange = {(e)=>setCrewPosition(e.target.value)} name=\"crew_position\" value={crew_position}>\r\n                    <option value=\"\">Select Crew Position</option>\r\n                    <option value=\"Captain\">Captain</option>\r\n                    <option value=\"First Mate\">First Mate</option>\r\n                    <option value=\"Quarter Master\">Quarter Master</option>\r\n                    <option value=\"Boatswain\">Boatswain</option>\r\n                    <option value=\"Powder Monkey\">Powder Monkey</option>\r\n                </select><br></br>\r\n            </p>\r\n            <p>\r\n                <label>Peg Leg: </label><br/>\r\n                <input type=\"checkbox\" value={peg_leg} onChange = {()=>setPegLeg(!peg_leg)} checked={peg_leg}/>\r\n            </p>\r\n            <p>\r\n                <label>Eye Patch: </label><br/>\r\n                <input type=\"checkbox\" value={eye_patch} onChange = {()=>setEyePatch(!eye_patch)} checked={eye_patch}/>\r\n            </p>\r\n            <p>\r\n                <label>Hook Hand: </label><br/>\r\n                <input type=\"checkbox\" value={hook_hand} onChange = {()=>setHookHand(!hook_hand)} checked={hook_hand}/>\r\n            </p>\r\n            <button>Update</button>\r\n        </form>\r\n    </>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {Router, Redirect} from '@reach/router';\n\nimport AllPirates from './components/AllPirates';\nimport CreatePirate from './components/CreatePirate';\nimport ShowPirate from './components/ShowPirate';\nimport EditPirate from './components/EditPirate';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <AllPirates path=\"/pirates\"/>   \n        <CreatePirate path=\"/pirate/new\"/>\n        <ShowPirate path=\"/pirate/:id\"/>\n        <EditPirate path=\"/pirate/:id/edit\"/>\n      </Router>\n      <Redirect from=\"/\" to=\"/pirates\" noThrow/> \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}